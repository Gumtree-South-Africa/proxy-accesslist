# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.
on:
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #  branches: [ master ]
  pull_request_target:
    branches: [ master, pw-prt-test ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
    runs-on: [ self-hosted ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check out the base branch under $GITHUB_WORKSPACE to provide the test code
      - uses: actions/checkout@v2
        name: Checkout test code

      # Setup python env
      - uses: actions/setup-python@v2

#      - name: Tests starting
#        uses: actions/send-slack-message@v1
#        with:
#          webhookUrl: ${{ env.SLACK_WEBHOOK }}
#          title: ProxyACL
#          channel: '#ecg-cloud-proxy'
#          messageText: Tests starting

      - name: Setup poetry
        run: |
          curl --retry 5 -sSL https://raw.githubusercontent.com/python-poetry/poetry/b47de09d800b7f2e4ed7088c8657878aa5380714/install-poetry.py | POETRY_VERSION=1.1.7 python3.
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry install

      - name: Setup squid
        run: |
          sudo apt update
          sudo apt install -y squid

      - name: Validate tests
        run: |
          poetry run black --check --diff ./
          poetry run isort --check --diff ./
          poetry run flake8
          poetry run pytest -v --cov --cov-report=term-missing:skip-covered

      # Check out the merge commit under `target` with the user's changes to be tested 
      - name: Checkout config to be tested
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
          path: "target"

      - name: Validate changes
        run: |
          poetry run python3 ./folder_test.py target
          cd target && sudo ../test.sh

      - name: Tests Failed
        if: failure()
        uses: actions/send-slack-message@v1
        with:
          webhookUrl: ${{ secrets.SLACK_WEBHOOK }}
          title: ProxyACL
          channel: '#ecg-cloud-proxy'
          messageText: "Tests failed <https://github.es.ecg.tools/${{ github.repository }}/pull/${{ github.event.number }}|${{ github.event.number }}>"

      - name: Tests Passed
        if: success()
        uses: actions/send-slack-message@v1
        with:
          webhookUrl: ${{ secrets.SLACK_WEBHOOK }}
          title: ProxyACL
          channel: '#ecg-cloud-proxy'
          messageText: "Tests passed <https://github.es.ecg.tools/${{ github.repository }}/pull/${{ github.event.number }}|${{ github.event.number }}>"
